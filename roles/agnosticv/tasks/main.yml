---
# - name: Print some debug information
#   vars:
#     msg: |
#         Module Variables ("vars"):
#         --------------------------------
#         {{ vars | to_nice_json }}

#         HOST Variables ("hostvars"):
#         --------------------------------
#         {{ hostvars | to_nice_json }}
#   debug:
#     msg: "{{ msg.split('\n') }}"
#   tags: debug_info

- when: ssh_key is defined
  block:
    - name: Get SSH secret key
      k8s_facts:
        api_version: v1
        kind: Secret
        name: "{{ ssh_key }}"
        namespace: "{{ lookup('env','WATCH_NAMESPACE') }}"
      register: ssh_key_r
      no_log: true

    - file:
        path: /opt/ansible/.ssh
        state: directory
        mode: 0700

    - name: Import SSH deploy key to pull the repo
      copy:
        dest: /opt/ansible/.ssh/id_rsa
        mode: 0600
        content: "{{ ssh_key_r.resources[0].data.id_rsa | b64decode }}"
      no_log: true

    - name: Clone agnosticv repo
      git:
        accept_hostkey: true
        repo: "{{ url }}"
        version: "{{ ref }}"
        dest: "{{ repo_path }}"
        depth: 1
        key_file: /opt/ansible/.ssh/id_rsa
      register: r_git_private

- when: ssh_key is not defined
  name: Clone agnosticv repo
  git:
    accept_hostkey: true
    repo: "{{ url }}"
    version: "{{ ref }}"
    depth: 1
    dest: "{{ repo_path }}"
  register: r_git_public

- when: >-
    r_git_private is changed
    or r_git_public is changed

  block:
    - name: Create output_dir directory
      file:
        state: directory
        path: "{{ output_dir }}"

    - name: Get the namespace for Governor objects from environment variables
      set_fact:
        governor_namespace: "{{ lookup('env','ANARCHY_NAMESPACE') }}"

    - name: Use the default namespace anarchy-operator for Governors objects
      set_fact:
        governor_namespace: anarchy-operator
      when: governor_namespace == ''

    - name: Find all catalog items
      command: >-
        {{ agnosticv_client_path }} --list --has __meta__.catalog
      args:
        chdir: "{{ (repo_path, context_dir) | join('/') }}"
      register: r_catalogitems

    - name: Debug with a loop
      loop:
        - 1
        - 2
        - 3
      debug:
        msg: "{{ item }}"

    - name: Debug without loop
      debug:
        msg: "{{ [1,2,3] }}"

    - name: Print stderr lines
      loop: "{{ r_catalogitems.stderr_lines }}"
      loop_control:
        loop_var: line
      include_tasks: print_error.yaml

    - loop: "{{ r_catalogitems.stdout_lines }}"
      loop_control:
        loop_var: c_i
        label: c_i
      include_tasks: generate_catalog_item.yml
      when: account != 'EXAMPLE_ACCOUNT'
      vars:
        account: "{{ c_i.split('/')[-3] }}"
        catalog_item: "{{ c_i.split('/')[-2] }}"
        stage: "{{ c_i.split('/')[-1] | regex_replace('\\.ya?ml$', '') }}"
